{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "ActionBinding_1": {
            "anyOf": [
                {
                    "$ref": "#/definitions/CommandBinding",
                    "description": "Execute a shell command when the binding is activated"
                },
                {
                    "$ref": "#/definitions/RangeBinding",
                    "description": "Change the range of a dial when the binding is executed"
                },
                {
                    "$ref": "#/definitions/MidiBinding",
                    "description": "Emit a MIDI event when the binding is activated"
                },
                {
                    "$ref": "#/definitions/ToggleMuteBinding",
                    "description": "Toggle mute for the given dial"
                },
                {
                    "$ref": "#/definitions/MixerSelectBinding",
                    "description": "Open the selection prompt to assign an application\nto a mixer channel"
                },
                {
                    "$ref": "#/definitions/PipewireLinkBinding",
                    "description": "Create a link between two nodes and ports within PipeWire"
                },
                {
                    "$ref": "#/definitions/PipewireExclusiveLinkBinding",
                    "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one."
                },
                {
                    "$ref": "#/definitions/PipewireUnLinkBinding",
                    "description": "Destroy a link between two nodes and ports within PipeWire"
                }
            ]
        },
        "ActionsWithColor": {
            "$ref": "#/definitions/ActionsWithColor_1"
        },
        "ActionsWithColor_1": {
            "$ref": "#/definitions/__type_3"
        },
        "Bindings": {
            "$ref": "#/definitions/__type"
        },
        "ButtonBinding": {
            "$ref": "#/definitions/__type_2"
        },
        "CancelBinding": {
            "$ref": "#/definitions/__type_21"
        },
        "CommandBinding": {
            "$ref": "#/definitions/__type_4"
        },
        "CycleBinding": {
            "$ref": "#/definitions/__type_14"
        },
        "MapFunction": {
            "enum": [
                "IDENTITY",
                "SQRT",
                "SQUARED",
                "TAPER"
            ],
            "type": "string"
        },
        "MidiBinding": {
            "$ref": "#/definitions/__type_6"
        },
        "MidiEventChannelPressureAftertouch": {
            "$ref": "#/definitions/__type_12"
        },
        "MidiEventControlChange": {
            "$ref": "#/definitions/__type_10"
        },
        "MidiEventNoteOff": {
            "$ref": "#/definitions/__type_8"
        },
        "MidiEventNoteOn": {
            "$ref": "#/definitions/__type_7"
        },
        "MidiEventPitchBend": {
            "$ref": "#/definitions/__type_13"
        },
        "MidiEventPolyphonicAftertouch": {
            "$ref": "#/definitions/__type_9"
        },
        "MidiEventProgramChange": {
            "$ref": "#/definitions/__type_11"
        },
        "MidiEventType.ChannelPressureAftertouch": {
            "enum": [
                "CHANNEL_PRESSURE_AFTERTOUCH"
            ],
            "type": "string"
        },
        "MidiEventType.ControlChange": {
            "enum": [
                "CONTROL_CHANGE"
            ],
            "type": "string"
        },
        "MidiEventType.NoteOff": {
            "enum": [
                "NOTE_OFF"
            ],
            "type": "string"
        },
        "MidiEventType.NoteOn": {
            "enum": [
                "NOTE_ON"
            ],
            "type": "string"
        },
        "MidiEventType.PitchBend": {
            "enum": [
                "PITCH_BEND"
            ],
            "type": "string"
        },
        "MidiEventType.PolyphonicAftertouch": {
            "enum": [
                "POLYPHONIC_AFTERTOUCH"
            ],
            "type": "string"
        },
        "MidiEventType.ProgramChange": {
            "enum": [
                "PROGRAM_CHANGE"
            ],
            "type": "string"
        },
        "MixerSelectBinding": {
            "$ref": "#/definitions/__type_16"
        },
        "NodeAndPort": {
            "$ref": "#/definitions/__type_18"
        },
        "PassthroughBinding": {
            "$ref": "#/definitions/__type_1"
        },
        "PipewireExclusiveLinkBinding": {
            "$ref": "#/definitions/__type_19"
        },
        "PipewireLinkBinding": {
            "$ref": "#/definitions/__type_17"
        },
        "PipewireUnLinkBinding": {
            "$ref": "#/definitions/__type_20"
        },
        "Range": {
            "items": [
                {
                    "type": "number"
                },
                {
                    "type": "number"
                }
            ],
            "maxItems": 2,
            "minItems": 2,
            "type": "array"
        },
        "RangeBinding": {
            "$ref": "#/definitions/__type_5"
        },
        "ToggleMuteBinding": {
            "$ref": "#/definitions/__type_15"
        },
        "__type": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/PassthroughBinding",
                        "description": "Pass through the MIDI input to the given channel and controller,\noptionally passing the input through the mapping function first"
                    },
                    {
                        "$ref": "#/definitions/ButtonBinding"
                    }
                ]
            },
            "type": "object"
        },
        "__type_1": {
            "additionalProperties": false,
            "description": "Pass through the MIDI input to the given channel and controller,\noptionally passing the input through the mapping function first",
            "properties": {
                "mapFunction": {
                    "$ref": "#/definitions/MapFunction"
                },
                "outChannel": {
                    "type": "number"
                },
                "outController": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "passthrough"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "outChannel",
                "outController",
                "type"
            ],
            "type": "object"
        },
        "__type_10": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "controller": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/MidiEventType.ControlChange"
                },
                "value": {
                    "type": "number"
                }
            },
            "required": [
                "channel",
                "controller",
                "type",
                "value"
            ],
            "type": "object"
        },
        "__type_11": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "program": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/MidiEventType.ProgramChange"
                }
            },
            "required": [
                "channel",
                "program",
                "type"
            ],
            "type": "object"
        },
        "__type_12": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "pressure": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/MidiEventType.ChannelPressureAftertouch"
                }
            },
            "required": [
                "channel",
                "pressure",
                "type"
            ],
            "type": "object"
        },
        "__type_13": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "lsb": {
                    "type": "number"
                },
                "msb": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/MidiEventType.PitchBend"
                }
            },
            "required": [
                "channel",
                "lsb",
                "msb",
                "type"
            ],
            "type": "object"
        },
        "__type_14": {
            "additionalProperties": false,
            "description": "Cycle through the given sub-bindings each time the binding\nis activated",
            "properties": {
                "items": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "actions": {
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/definitions/CommandBinding",
                                            "description": "Execute a shell command when the binding is activated"
                                        },
                                        {
                                            "$ref": "#/definitions/RangeBinding",
                                            "description": "Change the range of a dial when the binding is executed"
                                        },
                                        {
                                            "$ref": "#/definitions/MidiBinding",
                                            "description": "Emit a MIDI event when the binding is activated"
                                        },
                                        {
                                            "$ref": "#/definitions/ToggleMuteBinding",
                                            "description": "Toggle mute for the given dial"
                                        },
                                        {
                                            "$ref": "#/definitions/MixerSelectBinding",
                                            "description": "Open the selection prompt to assign an application\nto a mixer channel"
                                        },
                                        {
                                            "$ref": "#/definitions/PipewireLinkBinding",
                                            "description": "Create a link between two nodes and ports within PipeWire"
                                        },
                                        {
                                            "$ref": "#/definitions/PipewireExclusiveLinkBinding",
                                            "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one."
                                        },
                                        {
                                            "$ref": "#/definitions/PipewireUnLinkBinding",
                                            "description": "Destroy a link between two nodes and ports within PipeWire"
                                        }
                                    ]
                                },
                                "type": "array"
                            },
                            "color": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "actions"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "cycle"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "items",
                "type"
            ],
            "type": "object"
        },
        "__type_15": {
            "additionalProperties": false,
            "description": "Toggle mute for the given dial",
            "properties": {
                "dial": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "mute"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dial",
                "type"
            ],
            "type": "object"
        },
        "__type_16": {
            "additionalProperties": false,
            "description": "Open the selection prompt to assign an application\nto a mixer channel",
            "properties": {
                "channel": {
                    "type": "number"
                },
                "pendingColor": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "mixer::select"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "type"
            ],
            "type": "object"
        },
        "__type_17": {
            "additionalProperties": false,
            "description": "Create a link between two nodes and ports within PipeWire",
            "properties": {
                "dest": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "src": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "type": {
                    "enum": [
                        "pipewire::link"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dest",
                "src",
                "type"
            ],
            "type": "object"
        },
        "__type_18": {
            "additionalProperties": false,
            "properties": {
                "node": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            },
            "required": [
                "node",
                "port"
            ],
            "type": "object"
        },
        "__type_19": {
            "additionalProperties": false,
            "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one.",
            "properties": {
                "dest": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "src": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "type": {
                    "enum": [
                        "pipewire::exclusive_link"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dest",
                "src",
                "type"
            ],
            "type": "object"
        },
        "__type_2": {
            "additionalProperties": false,
            "properties": {
                "onLongPress": {
                    "$ref": "#/definitions/ActionsWithColor"
                },
                "onPress": {
                    "$ref": "#/definitions/ActionsWithColor"
                },
                "onRelease": {
                    "$ref": "#/definitions/ActionsWithColor"
                },
                "onShiftLongPress": {
                    "$ref": "#/definitions/ActionsWithColor"
                },
                "onShiftPress": {
                    "$ref": "#/definitions/ActionsWithColor"
                },
                "type": {
                    "enum": [
                        "button"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "__type_20": {
            "additionalProperties": false,
            "description": "Destroy a link between two nodes and ports within PipeWire",
            "properties": {
                "dest": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "src": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "type": {
                    "enum": [
                        "pipewire::unlink"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dest",
                "src",
                "type"
            ],
            "type": "object"
        },
        "__type_21": {
            "additionalProperties": false,
            "description": "Cancel any current pending action. If there is no pending action\nthen the alt binding will be executed (if specified)",
            "properties": {
                "alt": {
                    "$ref": "#/definitions/ActionBinding_1"
                },
                "type": {
                    "enum": [
                        "cancel"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "__type_3": {
            "additionalProperties": false,
            "properties": {
                "actions": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/CommandBinding",
                                "description": "Execute a shell command when the binding is activated"
                            },
                            {
                                "$ref": "#/definitions/RangeBinding",
                                "description": "Change the range of a dial when the binding is executed"
                            },
                            {
                                "$ref": "#/definitions/MidiBinding",
                                "description": "Emit a MIDI event when the binding is activated"
                            },
                            {
                                "$ref": "#/definitions/CycleBinding",
                                "description": "Cycle through the given sub-bindings each time the binding\nis activated"
                            },
                            {
                                "$ref": "#/definitions/CancelBinding",
                                "description": "Cancel any current pending action. If there is no pending action\nthen the alt binding will be executed (if specified)"
                            },
                            {
                                "$ref": "#/definitions/ToggleMuteBinding",
                                "description": "Toggle mute for the given dial"
                            },
                            {
                                "$ref": "#/definitions/MixerSelectBinding",
                                "description": "Open the selection prompt to assign an application\nto a mixer channel"
                            },
                            {
                                "$ref": "#/definitions/PipewireLinkBinding",
                                "description": "Create a link between two nodes and ports within PipeWire"
                            },
                            {
                                "$ref": "#/definitions/PipewireExclusiveLinkBinding",
                                "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one."
                            },
                            {
                                "$ref": "#/definitions/PipewireUnLinkBinding",
                                "description": "Destroy a link between two nodes and ports within PipeWire"
                            }
                        ]
                    },
                    "type": "array"
                },
                "color": {
                    "type": "string"
                }
            },
            "required": [
                "actions"
            ],
            "type": "object"
        },
        "__type_4": {
            "additionalProperties": false,
            "description": "Execute a shell command when the binding is activated",
            "properties": {
                "command": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "command"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "command",
                "type"
            ],
            "type": "object"
        },
        "__type_5": {
            "additionalProperties": false,
            "description": "Change the range of a dial when the binding is executed",
            "properties": {
                "dial": {
                    "type": "string"
                },
                "modes": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "color": {
                                "type": "string"
                            },
                            "range": {
                                "$ref": "#/definitions/Range"
                            }
                        },
                        "required": [
                            "color",
                            "range"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "range"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dial",
                "modes",
                "type"
            ],
            "type": "object"
        },
        "__type_6": {
            "additionalProperties": false,
            "description": "Emit a MIDI event when the binding is activated",
            "properties": {
                "events": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/MidiEventNoteOn"
                            },
                            {
                                "$ref": "#/definitions/MidiEventNoteOff"
                            },
                            {
                                "$ref": "#/definitions/MidiEventPolyphonicAftertouch"
                            },
                            {
                                "$ref": "#/definitions/MidiEventControlChange"
                            },
                            {
                                "$ref": "#/definitions/MidiEventProgramChange"
                            },
                            {
                                "$ref": "#/definitions/MidiEventChannelPressureAftertouch"
                            },
                            {
                                "$ref": "#/definitions/MidiEventPitchBend"
                            }
                        ]
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "midi"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "events",
                "type"
            ],
            "type": "object"
        },
        "__type_7": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "note": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/MidiEventType.NoteOn"
                },
                "velocity": {
                    "type": "number"
                }
            },
            "required": [
                "channel",
                "note",
                "type",
                "velocity"
            ],
            "type": "object"
        },
        "__type_8": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "note": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/MidiEventType.NoteOff"
                },
                "velocity": {
                    "type": "number"
                }
            },
            "required": [
                "channel",
                "note",
                "type",
                "velocity"
            ],
            "type": "object"
        },
        "__type_9": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "note": {
                    "type": "number"
                },
                "pressure": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/MidiEventType.PolyphonicAftertouch"
                }
            },
            "required": [
                "channel",
                "note",
                "pressure",
                "type"
            ],
            "type": "object"
        }
    },
    "properties": {
        "bindings": {
            "$ref": "#/definitions/Bindings"
        },
        "connections": {
            "items": {
                "items": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "string"
                    }
                ],
                "maxItems": 2,
                "minItems": 2,
                "type": "array"
            },
            "type": "array"
        },
        "device": {
            "type": "string"
        },
        "outputMidi": {
            "type": "string"
        },
        "pipewire": {
            "additionalProperties": false,
            "properties": {
                "rules": {
                    "additionalProperties": false,
                    "properties": {
                        "onConnect": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "do": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/definitions/CommandBinding",
                                                    "description": "Execute a shell command when the binding is activated"
                                                },
                                                {
                                                    "$ref": "#/definitions/RangeBinding",
                                                    "description": "Change the range of a dial when the binding is executed"
                                                },
                                                {
                                                    "$ref": "#/definitions/MidiBinding",
                                                    "description": "Emit a MIDI event when the binding is activated"
                                                },
                                                {
                                                    "$ref": "#/definitions/ToggleMuteBinding",
                                                    "description": "Toggle mute for the given dial"
                                                },
                                                {
                                                    "$ref": "#/definitions/MixerSelectBinding",
                                                    "description": "Open the selection prompt to assign an application\nto a mixer channel"
                                                },
                                                {
                                                    "$ref": "#/definitions/PipewireLinkBinding",
                                                    "description": "Create a link between two nodes and ports within PipeWire"
                                                },
                                                {
                                                    "$ref": "#/definitions/PipewireExclusiveLinkBinding",
                                                    "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one."
                                                },
                                                {
                                                    "$ref": "#/definitions/PipewireUnLinkBinding",
                                                    "description": "Destroy a link between two nodes and ports within PipeWire"
                                                }
                                            ]
                                        },
                                        "type": "array"
                                    },
                                    "node": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "do",
                                    "node"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "onDisconnect": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "do": {
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/definitions/CommandBinding",
                                                    "description": "Execute a shell command when the binding is activated"
                                                },
                                                {
                                                    "$ref": "#/definitions/RangeBinding",
                                                    "description": "Change the range of a dial when the binding is executed"
                                                },
                                                {
                                                    "$ref": "#/definitions/MidiBinding",
                                                    "description": "Emit a MIDI event when the binding is activated"
                                                },
                                                {
                                                    "$ref": "#/definitions/ToggleMuteBinding",
                                                    "description": "Toggle mute for the given dial"
                                                },
                                                {
                                                    "$ref": "#/definitions/MixerSelectBinding",
                                                    "description": "Open the selection prompt to assign an application\nto a mixer channel"
                                                },
                                                {
                                                    "$ref": "#/definitions/PipewireLinkBinding",
                                                    "description": "Create a link between two nodes and ports within PipeWire"
                                                },
                                                {
                                                    "$ref": "#/definitions/PipewireExclusiveLinkBinding",
                                                    "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one."
                                                },
                                                {
                                                    "$ref": "#/definitions/PipewireUnLinkBinding",
                                                    "description": "Destroy a link between two nodes and ports within PipeWire"
                                                }
                                            ]
                                        },
                                        "type": "array"
                                    },
                                    "node": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "do",
                                    "node"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "onConnect",
                        "onDisconnect"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "rules"
            ],
            "type": "object"
        }
    },
    "required": [
        "bindings",
        "connections",
        "device",
        "outputMidi",
        "pipewire"
    ],
    "type": "object"
}

