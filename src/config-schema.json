{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "Action": {
            "anyOf": [
                {
                    "$ref": "#/definitions/CommandAction",
                    "description": "Execute a shell command when the binding is activated"
                },
                {
                    "$ref": "#/definitions/RangeAction",
                    "description": "Change the range of a dial when the binding is executed"
                },
                {
                    "$ref": "#/definitions/MidiAction",
                    "description": "Emit a MIDI event when the binding is activated"
                },
                {
                    "$ref": "#/definitions/CycleAction",
                    "description": "Cycle through the given sub-bindings each time the binding\nis activated"
                },
                {
                    "$ref": "#/definitions/CancelAction",
                    "description": "Cancel any current pending action. If there is no pending action\nthen the alt binding will be executed (if specified)"
                },
                {
                    "$ref": "#/definitions/ToggleMuteAction",
                    "description": "Turn on or off mute for the given dial"
                },
                {
                    "$ref": "#/definitions/LV2LoadPresetAction",
                    "description": "Load an LV2 preset for the given plugin"
                },
                {
                    "$ref": "#/definitions/MixerSelectAction",
                    "description": "Open the selection prompt to assign an application\nto a mixer channel"
                },
                {
                    "$ref": "#/definitions/PipewireLinkAction",
                    "description": "Create a link between two nodes and ports within PipeWire"
                },
                {
                    "$ref": "#/definitions/PipewireExclusiveLinkAction",
                    "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one."
                },
                {
                    "$ref": "#/definitions/PipewireUnLinkAction",
                    "description": "Destroy a link between two nodes and ports within PipeWire"
                },
                {
                    "$ref": "#/definitions/LEDSetAction",
                    "description": "Set the given button LED to the given color"
                },
                {
                    "$ref": "#/definitions/LEDSaveAction",
                    "description": "Save the LED state of the given button"
                },
                {
                    "$ref": "#/definitions/LEDRestoreAction",
                    "description": "Restore the previously saved LED state of the\ngiven button"
                }
            ]
        },
        "Action_1": {
            "anyOf": [
                {
                    "$ref": "#/definitions/CommandAction",
                    "description": "Execute a shell command when the binding is activated"
                },
                {
                    "$ref": "#/definitions/RangeAction",
                    "description": "Change the range of a dial when the binding is executed"
                },
                {
                    "$ref": "#/definitions/MidiAction",
                    "description": "Emit a MIDI event when the binding is activated"
                },
                {
                    "$ref": "#/definitions/CycleAction",
                    "description": "Cycle through the given sub-bindings each time the binding\nis activated"
                },
                {
                    "$ref": "#/definitions/CancelAction",
                    "description": "Cancel any current pending action. If there is no pending action\nthen the alt binding will be executed (if specified)"
                },
                {
                    "$ref": "#/definitions/ToggleMuteAction",
                    "description": "Turn on or off mute for the given dial"
                },
                {
                    "$ref": "#/definitions/LV2LoadPresetAction",
                    "description": "Load an LV2 preset for the given plugin"
                },
                {
                    "$ref": "#/definitions/MixerSelectAction",
                    "description": "Open the selection prompt to assign an application\nto a mixer channel"
                },
                {
                    "$ref": "#/definitions/PipewireLinkAction",
                    "description": "Create a link between two nodes and ports within PipeWire"
                },
                {
                    "$ref": "#/definitions/PipewireExclusiveLinkAction",
                    "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one."
                },
                {
                    "$ref": "#/definitions/PipewireUnLinkAction",
                    "description": "Destroy a link between two nodes and ports within PipeWire"
                },
                {
                    "$ref": "#/definitions/LEDSetAction",
                    "description": "Set the given button LED to the given color"
                },
                {
                    "$ref": "#/definitions/LEDSaveAction",
                    "description": "Save the LED state of the given button"
                },
                {
                    "$ref": "#/definitions/LEDRestoreAction",
                    "description": "Restore the previously saved LED state of the\ngiven button"
                }
            ]
        },
        "Bindings": {
            "$ref": "#/definitions/__type"
        },
        "ButtonBinding": {
            "$ref": "#/definitions/__type_2"
        },
        "CancelAction": {
            "$ref": "#/definitions/__type_15"
        },
        "CommandAction": {
            "$ref": "#/definitions/__type_4"
        },
        "CycleAction": {
            "$ref": "#/definitions/__type_14"
        },
        "KeyEventAction": {
            "$ref": "#/definitions/KeyEventAction_1",
            "description": "Actions(s) to execute on a key event such as a key\npress or release"
        },
        "KeyEventAction_1": {
            "$ref": "#/definitions/__type_3"
        },
        "LEDRestoreAction": {
            "$ref": "#/definitions/__type_25"
        },
        "LEDSaveAction": {
            "$ref": "#/definitions/__type_24"
        },
        "LEDSetAction": {
            "$ref": "#/definitions/__type_23"
        },
        "LV2LoadPresetAction": {
            "$ref": "#/definitions/__type_17"
        },
        "MapFunction": {
            "enum": [
                "IDENTITY",
                "SQRT",
                "SQUARED",
                "TAPER"
            ],
            "type": "string"
        },
        "MidiAction": {
            "$ref": "#/definitions/__type_6"
        },
        "MidiEventChannelPressureAftertouch": {
            "$ref": "#/definitions/__type_12"
        },
        "MidiEventControlChange": {
            "$ref": "#/definitions/__type_10"
        },
        "MidiEventNoteOff": {
            "$ref": "#/definitions/__type_8"
        },
        "MidiEventNoteOn": {
            "$ref": "#/definitions/__type_7"
        },
        "MidiEventPitchBend": {
            "$ref": "#/definitions/__type_13"
        },
        "MidiEventPolyphonicAftertouch": {
            "$ref": "#/definitions/__type_9"
        },
        "MidiEventProgramChange": {
            "$ref": "#/definitions/__type_11"
        },
        "MixerSelectAction": {
            "$ref": "#/definitions/__type_18"
        },
        "NodeAndPort": {
            "$ref": "#/definitions/__type_20"
        },
        "PassthroughBinding": {
            "$ref": "#/definitions/__type_1"
        },
        "PipewireExclusiveLinkAction": {
            "$ref": "#/definitions/__type_21"
        },
        "PipewireLinkAction": {
            "$ref": "#/definitions/__type_19"
        },
        "PipewireUnLinkAction": {
            "$ref": "#/definitions/__type_22"
        },
        "Range": {
            "items": [
                {
                    "type": "number"
                },
                {
                    "type": "number"
                }
            ],
            "maxItems": 2,
            "minItems": 2,
            "type": "array"
        },
        "RangeAction": {
            "$ref": "#/definitions/__type_5"
        },
        "ToggleMuteAction": {
            "$ref": "#/definitions/__type_16"
        },
        "__type": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/PassthroughBinding",
                        "description": "Pass through the MIDI input to the given channel and controller,\noptionally passing the input through the mapping function first"
                    },
                    {
                        "$ref": "#/definitions/ButtonBinding"
                    }
                ]
            },
            "type": "object"
        },
        "__type_1": {
            "additionalProperties": false,
            "description": "Pass through the MIDI input to the given channel and controller,\noptionally passing the input through the mapping function first",
            "properties": {
                "mapFunction": {
                    "$ref": "#/definitions/MapFunction"
                },
                "outChannel": {
                    "type": "number"
                },
                "outController": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "passthrough"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "outChannel",
                "outController",
                "type"
            ],
            "type": "object"
        },
        "__type_10": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "controller": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "CONTROL_CHANGE"
                    ],
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "required": [
                "channel",
                "controller",
                "type",
                "value"
            ],
            "type": "object"
        },
        "__type_11": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "program": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "PROGRAM_CHANGE"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "program",
                "type"
            ],
            "type": "object"
        },
        "__type_12": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "pressure": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "CHANNEL_PRESSURE_AFTERTOUCH"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "pressure",
                "type"
            ],
            "type": "object"
        },
        "__type_13": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "lsb": {
                    "type": "number"
                },
                "msb": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "PITCH_BEND"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "lsb",
                "msb",
                "type"
            ],
            "type": "object"
        },
        "__type_14": {
            "additionalProperties": false,
            "description": "Cycle through the given sub-bindings each time the binding\nis activated",
            "properties": {
                "actions": {
                    "items": {
                        "items": {
                            "$ref": "#/definitions/Action"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "cycle"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "actions",
                "type"
            ],
            "type": "object"
        },
        "__type_15": {
            "additionalProperties": false,
            "description": "Cancel any current pending action. If there is no pending action\nthen the alt binding will be executed (if specified)",
            "properties": {
                "alt": {
                    "$ref": "#/definitions/Action_1"
                },
                "type": {
                    "enum": [
                        "cancel"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "__type_16": {
            "additionalProperties": false,
            "description": "Turn on or off mute for the given dial",
            "properties": {
                "dial": {
                    "type": "string"
                },
                "mute": {
                    "type": "boolean"
                },
                "type": {
                    "enum": [
                        "mute"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dial",
                "mute",
                "type"
            ],
            "type": "object"
        },
        "__type_17": {
            "additionalProperties": false,
            "description": "Load an LV2 preset for the given plugin",
            "properties": {
                "pluginName": {
                    "type": "string"
                },
                "preset": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "lv2::load_preset"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "pluginName",
                "preset",
                "type"
            ],
            "type": "object"
        },
        "__type_18": {
            "additionalProperties": false,
            "description": "Open the selection prompt to assign an application\nto a mixer channel",
            "properties": {
                "channel": {
                    "type": "number"
                },
                "onFinish": {
                    "items": {
                        "$ref": "#/definitions/Action"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "mixer::select"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "type"
            ],
            "type": "object"
        },
        "__type_19": {
            "additionalProperties": false,
            "description": "Create a link between two nodes and ports within PipeWire",
            "properties": {
                "dest": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "src": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "type": {
                    "enum": [
                        "pipewire::link"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dest",
                "src",
                "type"
            ],
            "type": "object"
        },
        "__type_2": {
            "additionalProperties": false,
            "properties": {
                "defaultLEDState": {
                    "type": "string"
                },
                "onLongPress": {
                    "$ref": "#/definitions/KeyEventAction"
                },
                "onPress": {
                    "$ref": "#/definitions/KeyEventAction"
                },
                "onRelease": {
                    "$ref": "#/definitions/KeyEventAction"
                },
                "onShiftLongPress": {
                    "$ref": "#/definitions/KeyEventAction"
                },
                "onShiftPress": {
                    "$ref": "#/definitions/KeyEventAction"
                },
                "type": {
                    "enum": [
                        "button"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "__type_20": {
            "additionalProperties": false,
            "properties": {
                "node": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            },
            "required": [
                "node",
                "port"
            ],
            "type": "object"
        },
        "__type_21": {
            "additionalProperties": false,
            "description": "Create an exclusive link between two nodes and ports within PipeWire.\nCreating an exclusive link is equivalent to creating a normal link and then\ndestroying all other links originating from source port that aren't the newly\ncreated one.",
            "properties": {
                "dest": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "src": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "type": {
                    "enum": [
                        "pipewire::exclusive_link"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dest",
                "src",
                "type"
            ],
            "type": "object"
        },
        "__type_22": {
            "additionalProperties": false,
            "description": "Destroy a link between two nodes and ports within PipeWire",
            "properties": {
                "dest": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "src": {
                    "$ref": "#/definitions/NodeAndPort"
                },
                "type": {
                    "enum": [
                        "pipewire::unlink"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dest",
                "src",
                "type"
            ],
            "type": "object"
        },
        "__type_23": {
            "additionalProperties": false,
            "description": "Set the given button LED to the given color",
            "properties": {
                "button": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "led::set"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "button",
                "color",
                "type"
            ],
            "type": "object"
        },
        "__type_24": {
            "additionalProperties": false,
            "description": "Save the LED state of the given button",
            "properties": {
                "button": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "led::save"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "button",
                "type"
            ],
            "type": "object"
        },
        "__type_25": {
            "additionalProperties": false,
            "description": "Restore the previously saved LED state of the\ngiven button",
            "properties": {
                "button": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "led::restore"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "button",
                "type"
            ],
            "type": "object"
        },
        "__type_3": {
            "additionalProperties": false,
            "description": "Actions(s) to execute on a key event such as a key\npress or release",
            "properties": {
                "actions": {
                    "items": {
                        "$ref": "#/definitions/Action"
                    },
                    "type": "array"
                },
                "timeout": {
                    "type": "number"
                }
            },
            "required": [
                "actions"
            ],
            "type": "object"
        },
        "__type_4": {
            "additionalProperties": false,
            "description": "Execute a shell command when the binding is activated",
            "properties": {
                "cancelable": {
                    "type": "boolean"
                },
                "command": {
                    "type": "string"
                },
                "onFinish": {
                    "items": {
                        "$ref": "#/definitions/Action"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "command"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "command",
                "type"
            ],
            "type": "object"
        },
        "__type_5": {
            "additionalProperties": false,
            "description": "Change the range of a dial when the binding is executed",
            "properties": {
                "dial": {
                    "type": "string"
                },
                "range": {
                    "$ref": "#/definitions/Range"
                },
                "type": {
                    "enum": [
                        "range"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "dial",
                "range",
                "type"
            ],
            "type": "object"
        },
        "__type_6": {
            "additionalProperties": false,
            "description": "Emit a MIDI event when the binding is activated",
            "properties": {
                "events": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/MidiEventNoteOn"
                            },
                            {
                                "$ref": "#/definitions/MidiEventNoteOff"
                            },
                            {
                                "$ref": "#/definitions/MidiEventPolyphonicAftertouch"
                            },
                            {
                                "$ref": "#/definitions/MidiEventControlChange"
                            },
                            {
                                "$ref": "#/definitions/MidiEventProgramChange"
                            },
                            {
                                "$ref": "#/definitions/MidiEventChannelPressureAftertouch"
                            },
                            {
                                "$ref": "#/definitions/MidiEventPitchBend"
                            }
                        ]
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "midi"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "events",
                "type"
            ],
            "type": "object"
        },
        "__type_7": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "note": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "NOTE_ON"
                    ],
                    "type": "string"
                },
                "velocity": {
                    "type": "number"
                }
            },
            "required": [
                "channel",
                "note",
                "type",
                "velocity"
            ],
            "type": "object"
        },
        "__type_8": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "note": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "NOTE_OFF"
                    ],
                    "type": "string"
                },
                "velocity": {
                    "type": "number"
                }
            },
            "required": [
                "channel",
                "note",
                "type",
                "velocity"
            ],
            "type": "object"
        },
        "__type_9": {
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "type": "number"
                },
                "note": {
                    "type": "number"
                },
                "pressure": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "POLYPHONIC_AFTERTOUCH"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "note",
                "pressure",
                "type"
            ],
            "type": "object"
        }
    },
    "properties": {
        "bindings": {
            "$ref": "#/definitions/Bindings"
        },
        "connections": {
            "items": {
                "items": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "string"
                    }
                ],
                "maxItems": 2,
                "minItems": 2,
                "type": "array"
            },
            "type": "array"
        },
        "device": {
            "type": "string"
        },
        "inputMidi": {
            "type": "string"
        },
        "lv2Path": {
            "type": "string"
        },
        "outputMidi": {
            "type": "string"
        },
        "pipewire": {
            "additionalProperties": false,
            "properties": {
                "plugins": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "host": {
                                "enum": [
                                    "jalv",
                                    "jalv.gtk3"
                                ],
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "uri": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "host",
                            "name",
                            "uri"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "rules": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "mixerChannel": {
                                "anyOf": [
                                    {
                                        "enum": [
                                            "round_robin"
                                        ],
                                        "type": "string"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            },
                            "node": {
                                "type": "string"
                            },
                            "onConnect": {
                                "items": {
                                    "$ref": "#/definitions/Action"
                                },
                                "type": "array"
                            },
                            "onDisconnect": {
                                "items": {
                                    "$ref": "#/definitions/Action"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "node"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "plugins",
                "rules"
            ],
            "type": "object"
        }
    },
    "required": [
        "bindings",
        "connections",
        "device",
        "inputMidi",
        "outputMidi",
        "pipewire"
    ],
    "type": "object"
}

